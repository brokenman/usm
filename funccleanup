#!/bin/bash

cleanup() {
if [ -e $ERRORLOG ]; then
	if [ $CLI ]; then
		echo -e $txtbld "         
\n==============================================================================
WARNING!        WARNING!        WARNING!        WARNING!        WARNING!
==============================================================================
One or more errors occurred while usm was running:                       
" $rst
        cat $ERRORLOG
        echo -e $txtbld "
==============================================================================" $rst
		else
	gtk_message "`gettext "A fatal error occured"`" "`gettext "The following error broke the application:"`" "`cat $ERRORLOG`" gtk-dialog-error 500
	fi
fi
echo

( rm -f /var/lock/usm* && rm -rf $TMPDIR ) &>/dev/null
    
## Remove last package in cached files from function system_deps()
## in the case that Bob exited half way through process.
## We don't want to miss any processing what was half done.
## That would totally ruin Bob's day.
if [ -e $CHECKED ]; then
    [ -z $1 ] && sed -i '$d' $CHECKED
fi

## If user is midway through a download then remove it
if [ $dloadInProgress ]; then
	local PKG=${dloadInProgress##*/}
	rm $STORAGE/$PKG
fi

if [ $GUI ]; then
	## Kill insurance policy
	kill $USMPID 2>/dev/null
	kill_progress 2>/dev/null
	kill `pgrep -f package_get` 2>/dev/null
	kill `pgrep -f GTK_TAILBOX` 2>/dev/null
	kill `pgrep -f GTK_PROGRESS` 2>/dev/null
	[ -e /tmp/.toolspage ] && rm /tmp/.toolspage
	[ -e /tmp/.list.tmp ] && rm /tmp/.list.tmp
	[ -e /tmp/.bounce ] && rm /tmp/.bounce
fi

exit
}; export -f cleanup

fatality(){
echo "FATAL ERROR!" > $ERRORLOG
echo "$1" >> $ERRORLOG
echo "$2 $3" >> $ERRORLOG
cleanup
}
