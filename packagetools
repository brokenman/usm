#!/bin/bash

## Variables
[ -e /etc/slackware-version ] && iconname=usm
[ -e /etc/porteus-version ] && iconname=cdr

## Find an existing tmp directory from usm if it was run
TMPDIR=`ls /tmp|grep 'usm\.[[:alnum:]]'`
##[ -z $TMPDIR ] && TMPDIR=/tmp/usm.$$ || FOUNDTMP=1
if [[ -z $TMPDIR ]]; then
	TMPDIR=/tmp/usm.$$
else
	TMPDIR="/tmp/$TMPDIR"
	FOUNDTMP=1
fi

## Export some variables
export TMPDIR
export iconname
export gtk_message1

## Create directories
[ ! -d $TMPDIR ] && mkdir -p $TMPDIR

## ======================================================================
## gtk_modtools
## ----------------------------------------------------------------------
## Porteus module tools
gtk_modtools(){
export GTK_MODTOOLS='<window title="'$(gettext "Package tools")'" icon-name="'$iconname'" width-request="550" height-request="350">
<vbox>
## =================== START NOTEBOOK ================== ##
<notebook page="'$1'" show-tabs="true" show-border="true" labels="modtools|pkgtools" space-expand="true" space-fill="true">

'"`if [ -e /etc/porteus-version ]; then funcmoduleToolsCreate; fi`"'
'"`if [ -e /etc/slackware-version ]; then funcpackageToolsCreate; fi`"'

<variable>nbkPkgTools</variable>
</notebook>
## =================== EXECUTE MODULE TOOLS ================== ##
	<hbox space-expand="false" space-fill="false">
		<button sensitive="false" visible="false">
			<label>'$(gettext "Execute")'</label>
			<input file stock="gtk-yes"></input>
			<variable>butModtoolsExecute</variable>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a slackware'"'` ]] && echo true)">modtools_txz2xzm $entselPkg &</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder'"'` ]] && echo true)">modtools_dir2packages $entselDir &</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus'"'` ]] && echo true)">mloop $entselMod &</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus'"'` ]] && echo true)">gtk_message1 "Your module was mounted at /mnt/loop" &</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'List files in a porteus'"'` ]] && echo true)">modtools_list $entselMod &</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Unpack a porteus'"'` ]] && echo true)">modtools_unpack $entselMod &</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Create a module'"'` ]] && echo true)">modtools_module $entselDir &</action>
		</button>
## =================== EXECUTE PACKAGE TOOLS ================== ##
		<button sensitive="false" visible="false">
			<label>'$(gettext "Execute")'</label>
			<input file stock="gtk-yes"></input>
			<variable>butPkgtoolsExecute</variable>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Install a slackware'"'` ]] && echo true)">installpkg $entselPkgSlack > /tmp/.stream &</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Install a slackware'"'` ]] && echo true)">gtk_tailbox &</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Install a folder'"'` ]] && echo true)">pkgtools_install_dir $entselDirSlack &</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'List files'"'` ]] && echo true)">pkgtools_list $entselPkgSlack &</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Unpack'"'` ]] && echo true)">pkgtools_unpack $entselPkgSlack &</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Remove'"'` ]] && echo true)">pkgtools_remove_pkg</action>
		</button>
		<button cancel></button>
	</hbox>
</vbox>
</window>
'
echo "$GTK_MODTOOLS" | sed '/^##/d' | gtkdialog -c -s
}; export -f gtk_modtools

## ======================================================================
## funcmoduleToolsCreate
## ----------------------------------------------------------------------
## Create the XML for the porteus module tools tab
funcmoduleToolsCreate(){
echo '<vbox margin="5">
	<hseparator></hseparator>
	<hbox>
		<comboboxtext space-expand="true" space-fill="true">
			<variable>cmbModtools</variable>
			<item>'`gettext "Step 1: Select an action"`'</item>
			<item>'`gettext "Convert a slackware package to a module"`'</item>
			<item>'`gettext "Convert a folder of slackware packages to modules"`'</item>
			<item>'`gettext "Mount a porteus module for viewing"`'</item>
			<item>'`gettext "List files in a porteus module"`'</item>
			<item>'`gettext "Unpack a porteus module"`'</item>
			<item>'`gettext "Create a module from a folder"`'</item>
			<action function="show">butModtoolsExecute</action>
			<action function="hide">butPkgtoolsExecute</action>
## <------- CHOOSE A SLACKWARE PACKAGE
			<action condition="command_is_true([[ `echo $cmbModtools|grep '"'Convert a slackware'"'` ]] && echo true)">hide:entselMod</action>
			<action condition="command_is_true([[ `echo $cmbModtools|grep '"'Convert a slackware'"'` ]] && echo true)">hide:butselMod</action>
			<action condition="command_is_true([[ `echo $cmbModtools|grep '"'Convert a slackware'"'` ]] && echo true)">hide:entselDir</action>
			<action condition="command_is_true([[ `echo $cmbModtools|grep '"'Convert a slackware'"'` ]] && echo true)">hide:butselDir</action>
			<action condition="command_is_true([[ `echo $cmbModtools|grep '"'Convert a slackware'"'` ]] && echo true)">hide:txtMount</action>
			<action condition="command_is_true([[ `echo $cmbModtools|grep '"'Convert a slackware'"'` ]] && echo true)">show:entselPkg</action>
			<action condition="command_is_true([[ `echo $cmbModtools|grep '"'Convert a slackware'"'` ]] && echo true)">show:butselPkg</action>
## <------- CHOOSE A FOLDER
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder|Create a module'"'` ]] && echo true)">hide:entselMod</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder|Create a module'"'` ]] && echo true)">hide:butselMod</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder|Create a module'"'` ]] && echo true)">hide:entselPkg</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder|Create a module'"'` ]] && echo true)">hide:butselPkg</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder|Create a module'"'` ]] && echo true)">hide:txttxz2xzm</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder|Create a module'"'` ]] && echo true)">hide:txtmount</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder|Create a module'"'` ]] && echo true)">show:entselDir</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Convert a folder|Create a module'"'` ]] && echo true)">show:butselDir</action>
## <------- CHOOSE A PORTEUS MODULE
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus|List files|Unpack'"'` || `echo $cmbModtools|grep '"'List files'"'` ]] && echo true)">show:entselMod</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus|List files|Unpack'"'` || `echo $cmbModtools|grep '"'List files'"'` ]] && echo true)">show:butselMod</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus|List files|Unpack'"'` || `echo $cmbModtools|grep '"'List files'"'` ]] && echo true)">hide:entselPkg</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus|List files|Unpack'"'` || `echo $cmbModtools|grep '"'List files'"'` ]] && echo true)">hide:butselPkg</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus|List files|Unpack'"'` || `echo $cmbModtools|grep '"'List files'"'` ]] && echo true)">hide:entselDir</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus|List files|Unpack'"'` || `echo $cmbModtools|grep '"'List files'"'` ]] && echo true)">hide:butselDir</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus|List files|Unpack'"'` || `echo $cmbModtools|grep '"'List files'"'` ]] && echo true)">hide:txttxz2xzm</action>
		</comboboxtext>
	</hbox>
	<text><label>""</label></text>
	<hbox>
## <------- CHOOSE A PORTEUS MODULE
		<entry fs-action="file" fs-title="'$(gettext "Select a module")'" fs-filters="*.xzm" editable="false" visible="false" space-expand="true" space-fill="true">
			<variable>entselMod</variable>
			<default>Select a module</default>
			<action signal="changed" function="enable">butModtoolsExecute</action>
			<action condition="command_is_true([[ `echo $cmbModtools|egrep '"'Mount a porteus'"'` ]] && echo true)" function="show">txtmount</action>
		</entry>
		<button visible="false" space-expand="false" space-fill="false">
			<label>Select</label>
			<variable>butselMod</variable>
			<action function="fileselect">entselMod</action>		
		</button>
## <------- CHOOSE A FOLDER		
		<entry fs-action="folder" fs-title="'$(gettext "Select a folder")'" editable="false" visible="false" space-expand="true" space-fill="true">
			<variable>entselDir</variable>
			<default>'$(gettext "Select a folder")'</default>
			<action signal="changed" function="enable">butModtoolsExecute</action>
			<action signal="changed" function="show">txttxz2xzm</action>
		</entry>
		<button visible="false" space-expand="false" space-fill="false">
			<label>Select</label>
			<variable>butselDir</variable>
			<action function="fileselect">entselDir</action>
		</button>
## <------- CHOOSE A SLACKWARE PACKAGE
		<entry fs-action="file" fs-title="'$(gettext "Select a package")'" fs-filters="*.txz|.tgz" editable="false" visible="false" space-expand="true" space-fill="true">
			<variable>entselPkg</variable>
			<default>'$(gettext "Select a slackware package")'</default>
			<action signal="changed" function="enable">butModtoolsExecute</action>
			<action signal="changed" function="show">txttxz2xzm</action>
		</entry>
		<button visible="false"  space-expand="false" space-fill="false">
			<label>Select</label>
			<variable>butselPkg</variable>
			<action function="fileselect">entselPkg</action>
		</button>
	</hbox>
	<text><label>""</label></text>
	<text><label>""</label></text>
## <------- TEXT INSTRUCTIONS
	<text wrap="true" visible="false" width-request="450">
		<variable>txttxz2xzm</variable>
		<label>'$(gettext "Your files will be created in the same folder as the file you chose. Click execute to begin the file conversion.")'</label>
	</text>
	<text wrap="true" visible="false" width-request="470">
		<variable>txtmount</variable>
		<label>'$(gettext "Your module will be mounted at /mnt/loop. Click execute to mount the file.")'</label>
	</text>
</vbox>'
}

## ======================================================================
## funcpackageToolsCreate
## ----------------------------------------------------------------------
## Create the XML for the package tools tab
funcpackageToolsCreate(){
echo '<vbox margin="5">
	<hseparator></hseparator>
	<hbox>
		<comboboxtext space-expand="true" space-fill="true">
			<variable>cmbPkgtools</variable>
			<item>'`gettext "Step 1: Select an action"`'</item>
			<item>'`gettext "Install a slackware package"`'</item>
			<item>'`gettext "Install a folder of slackware packages"`'</item>
			<item>'`gettext "Remove a slackware package"`'</item>
			<item>'`gettext "List files in a slackware package"`'</item>
			<item>'`gettext "Unpack a slackware package"`'</item>
			<action function="hide">butModtoolsExecute</action>
			<action function="show">butPkgtoolsExecute</action>
## <------- CHOOSE A SLACKWARE PACKAGE
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Step 1'"'` ]] && echo true)">hide:txtremovePkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Step 1'"'` ]] && echo true)">hide:entselPkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Step 1'"'` ]] && echo true)">hide:butselPkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Step 1'"'` ]] && echo true)">hide:entselDirSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Step 1'"'` ]] && echo true)">hide:butselDirSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|egrep '"'Install a slackware|List files|Unpack'"'` ]] && echo true)">show:entselPkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|egrep '"'Install a slackware|List files|Unpack'"'` ]] && echo true)">show:butselPkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|egrep '"'Install a slackware|List files|Unpack'"'` ]] && echo true)">hide:entselDirSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|egrep '"'Install a slackware|List files|Unpack'"'` ]] && echo true)">hide:butselDirSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|egrep '"'Install a slackware|List files|Unpack'"'` ]] && echo true)">hide:txtremovePkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Remove'"'` ]] && echo true)">show:butPkgtoolsExecute</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Remove'"'` ]] && echo true)">enable:butPkgtoolsExecute</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Remove'"'` ]] && echo true)">hide:entselDirSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Remove'"'` ]] && echo true)">hide:butselDirSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Remove'"'` ]] && echo true)">hide:entselPkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Remove'"'` ]] && echo true)">hide:butselPkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Remove'"'` ]] && echo true)">show:txtremovePkgSlack</action>
## <------- CHOOSE A FOLDER
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Install a folder'"'` ]] && echo true)">show:entselDirSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Install a folder'"'` ]] && echo true)">show:butselDirSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Install a folder'"'` ]] && echo true)">hide:entselPkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Install a folder'"'` ]] && echo true)">hide:butselPkgSlack</action>
			<action condition="command_is_true([[ `echo $cmbPkgtools|grep '"'Install a folder'"'` ]] && echo true)">hide:txtremovePkgSlack</action>
		</comboboxtext>
	</hbox>
	<text><label>""</label></text>
	<hbox>
## <------- CHOOSE A SLACKWARE PACKAGE
		<entry fs-action="file" fs-title="'$(gettext "Select a package")'" fs-filters="*.txz|.tgz" editable="false" visible="false" space-expand="true" space-fill="true">
			<variable>entselPkgSlack</variable>
			<default>'$(gettext "Select a slackware package")'</default>
			<action signal="changed" function="enable">butPkgtoolsExecute</action>
			<action signal="changed" function="show">txtinstallpkg</action>
		</entry>
		<button visible="false"  space-expand="false" space-fill="false">
			<label>Select</label>
			<variable>butselPkgSlack</variable>
			<action function="fileselect">entselPkgSlack</action>
		</button>
## <------- CHOOSE A FOLDER
		<entry fs-action="folder" fs-title="'$(gettext "Select a folder")'" editable="false" visible="false" space-expand="true" space-fill="true">
			<variable>entselDirSlack</variable>
			<default>'$(gettext "Select a folder")'</default>
			<action signal="changed" function="enable">butPkgtoolsExecute</action>
		</entry>
		<button visible="false" space-expand="false" space-fill="false">
			<label>Select</label>
			<variable>butselDirSlack</variable>
			<action function="fileselect">entselDirSlack</action>
		</button>
	</hbox>
	<text><label>""</label></text>
	<text><label>""</label></text>
## <------- TEXT INSTRUCTIONS
	<text visible="false">
		<variable>txtremovePkgSlack</variable>
		<label>'$(gettext "Click the Execute button to choose your package")'</label>
	</text>
</vbox>'
}

## ======================================
## modtools_txz2xzm
## --------------------------------------
## Convert single slackware package to module
modtools_txz2xzm(){
## Make sure target is writable
local PTH=`dirname $1`
local PKG=`basename $1`
local SHORT=${PKG%.*}
[ ! -w $PTH ] && { gtk_message1 "`gettext "The target folder is not writable."`"; cleanup; }
export STATE=BUILDMODULE
echo "$PKG" > $TMPDIR/.message
touch $TMPDIR/proglock
gtk_progress "`gettext "Converting"`" &
installpkg --terse -root $TMPDIR/tmpunpack $1
dir2xzm $TMPDIR/tmpunpack $PTH/$SHORT.xzm > $TMPDIR/.progress
rm -rf $TMPDIR/tmpunpack
gtk_message1 "`gettext "File conversion has finished."`"
}; export -f modtools_txz2xzm

## ======================================
## modtools_dir2packages
## --------------------------------------
## Convert folder of slackware packages to modules
modtools_dir2packages(){
## Make sure target is writable
local PTH="$1"
[ ! -w $PTH ] && { gtk_message1 "`gettext "The target folder is not writable."`"; cleanup; }

export STATE=BUILDMODULES
gtk_progress "`gettext "Converting"`" &
for a in `find $PTH -type f | egrep ".*\.t.z"`; do
	local PKG=${a##*/}
	local SHORT=${PKG%.*}
	echo "$PKG" > $TMPDIR/.message
	touch $TMPDIR/proglock
	installpkg --terse -root $TMPDIR/tmpunpack $a
	dir2xzm $TMPDIR/tmpunpack $PTH/$SHORT.xzm > $TMPDIR/.progress
	echo 2 > $TMPDIR/.progress
	rm -rf $TMPDIR/tmpunpack
done
kill_progress
unset STATE
gtk_message1 "`gettext "File conversion has finished."`"
}; export -f modtools_dir2packages

## ======================================
## modtools_list
## --------------------------------------
## List module files
modtools_list(){
local PKG=`basename $1`
[ -d /tmp/usmunpacked ] && rm /tmp/usmunpacked/* 2>/dev/null || mkdir /tmp/usmunpacked
mount -o loop $1 /tmp/usmunpacked
sleep 1
find /tmp/usmunpacked > $TMPDIR/filelist.tmp
gtk_filelist "`gettext "File list"`" $TMPDIR/filelist.tmp /tmp/usmunpacked &
}; export -f modtools_list

## ======================================
## modtools_unpack
## --------------------------------------
## Decompress a porteus module for editing
modtools_unpack(){
local PKG=`basename $1`
local PTH=`dirname $1`
local SHORT=${PKG%.*}
## Make sure target is writable otherwise use /tmp
[ ! -w $PTH ] && TARG=/tmp/unpacked || TARG=$PTH/$SHORT
[ -d $TARG ] && rm -rf $TARG/* 2>/dev/null || mkdir -p $TARG
export STATE=MANUAL
echo "$PKG" > $TMPDIR/.message
touch $TMPDIR/proglock
gtk_progress "`gettext "Decompressing"`" &
xzm2dir $1 $TARG
rm $TMPDIR/proglock
sleep 1
kill_progress
gtk_message2 "`gettext "Your file was decompressed to:"`" "$TARG"
unset STATE
};export -f modtools_unpack

## ======================================
## modtools_module
## --------------------------------------
## Create a module from a folder
modtools_module(){
local PKG=`basename $1`
local PTH=`dirname $1`
## Make sure target is writable otherwise use /tmp
[ ! -w $PTH ] && TARG=/tmp/$PKG.xzm || TARG=$PTH/$PKG.xzm
export STATE=BUILDMODULE
echo "$PKG" > $TMPDIR/.message
touch $TMPDIR/proglock
gtk_progress "`gettext "Creating module"`" &
dir2xzm $1 $TARG > $TMPDIR/.progress
rm $TMPDIR/proglock 2>/dev/null
gtk_message2 "`gettext "Your file was created at:"`" "$TARG"
unset STATE
}; export -f modtools_module

## ======================================
## pkgtools_list
## --------------------------------------
## List package files
pkgtools_list(){
local PKG=`basename $1`
[ -d /tmp/usmunpacked ] && rm /tmp/usmunpacked/* 2>/dev/null || mkdir /tmp/usmunpacked
installpkg --terse -root /tmp/usmunpacked $1
sleep 1
find /tmp/usmunpacked > $TMPDIR/filelist.tmp
gtk_filelist "`gettext "File list"`" $TMPDIR/filelist.tmp /tmp/usmunpacked &
}; export -f pkgtools_list

## ======================================
## pkgtools_unpack
## --------------------------------------
## Decompress a slackware package for editing
pkgtools_unpack(){
local PKG=`basename $1`
local PTH=`dirname $1`
local SHORT=${PKG%.*}
## Make sure target is writable otherwise use /tmp
[ ! -w $PTH ] && TARG=/tmp/unpacked || TARG=$PTH/$SHORT
[ -d $TARG ] && rm -rf $TARG/* 2>/dev/null || mkdir -p $TARG
export STATE=MANUAL
echo "$PKG" > $TMPDIR/.message
touch $TMPDIR/proglock
gtk_progress "`gettext "Decompressing"`" &
installpkg --terse $TARG $1
rm $TMPDIR/proglock
sleep 1
kill_progress
gtk_message2 "`gettext "Your file was decompressed to:"`" "$TARG"
unset STATE
};export -f pkgtools_unpack

## ======================================
## pkgtools_install_dir
## --------------------------------------
## Install all slackware package in a given folder
pkgtools_install_dir(){
local PKG=`basename $1`
export STATE=MANUAL
echo "$PKG" > $TMPDIR/.message
touch $TMPDIR/proglock
gtk_progress "`gettext "Installing"`" &
for a in `find $1 -type f -name "*.t.z"`; do
	echo "$PKG" > $TMPDIR/.message
	installpkg --terse $TARG $1
done
rm $TMPDIR/proglock
sleep 1
kill_progress
gtk_message2 "`gettext "Your files were installed"`" "$TARG"
unset STATE
};export -f pkgtools_install_dir

## ======================================
## pkgtools_remove_pkg
## --------------------------------------
## Remove a chosen package
pkgtools_remove_pkg(){
gtk_list "`gettext "Remove a slackware package"`" "ls /var/log/packages"
[ $ABORT ] && { unset ABORT; return ; exit; }
removepkg `awk -F'"' /listChosen/'{print$2}'  /tmp/.list.tmp` > /tmp/.stream &
gtk_tailbox 
rm /tmp/.list.tmp 2>/dev/null /tmp/.stream


}; export -f pkgtools_remove_pkg


## Find which tab to open on. A temp file is opened at /tmp/.toolspage
## By the usm main tools menu
[ -f /tmp/.toolspage ] && gtk_modtools `cat /tmp/.toolspage` || gtk_modtools 1

## Cleanup
[ -z $FOUNDTMP ] && rm -rf $TMPDIR
[ -e /tmp/.toolspage ] && rm /tmp/.toolspage
